{"version":3,"sources":["logo.svg","components/About.js","components/Navbar.js","components/Alert.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","mystyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","onClick","toggleMode","htmlFor","prototype","title","PropTypes","string","Alert","height","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capital","msg","TextArea","useState","text","setText","value","onChange","event","console","log","target","rows","disabled","length","newText","showalert","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","App","setmode","setalert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oNAAe,I,YCEA,SAASA,EAAMC,GA6B1B,IAAIC,EAAU,CACZC,MAAqB,SAAdF,EAAMG,KAAe,QAAQ,UACpCC,gBAA+B,SAAdJ,EAAMG,KAAe,UAAU,SAKpD,OACE,sBAAKE,UAAU,YAAYC,MAAOL,EAAlC,UACI,oBAAII,UAAU,OAAd,sBACF,sBAAKA,UAAU,YAAYE,GAAG,mBAAmBD,MAAOL,EAAxD,UACE,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,aAApC,SACE,wBACEF,UAAU,mBACVG,KAAK,SACLF,MAAOL,EACP,iBAAe,WACf,iBAAe,eACf,gBAAc,OACd,gBAAc,cAPhB,wBAYF,qBACEM,GAAG,cACHF,UAAU,mCACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,wFAKJ,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,aAApC,SACE,wBACEF,UAAU,6BACVG,KAAK,SACL,iBAAe,WACfF,MAAOL,EACP,iBAAe,eACf,gBAAc,QACd,gBAAc,cAPhB,gCAYF,qBACEM,GAAG,cACHF,UAAU,8BACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,6LAMJ,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBE,GAAG,eAApC,SACE,wBACEF,UAAU,6BACVG,KAAK,SACL,iBAAe,WACfF,MAAOL,EACP,iBAAe,iBACf,gBAAc,QACd,gBAAc,gBAPhB,mCAYF,qBACEM,GAAG,gBACHF,UAAU,8BACV,kBAAgB,eAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBC,MAAOL,EAAvC,2H,2BC5GG,SAASQ,EAAOT,GAC3B,OACI,qBAAKK,UAAS,yCAAoCL,EAAMG,KAA1C,eAAqDH,EAAMG,MAAzE,SACA,sBAAKE,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,IAAlC,wBACA,wBAAQL,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BE,GAAG,yBAA7C,UACE,qBAAIF,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOK,GAAG,IAAzD,oBAEF,oBAAIL,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWK,GAAG,SAA9B,wBAiBJ,sBAAKL,UAAS,sCAA8C,UAAbL,EAAMG,KAAe,OAAO,SAA3E,UACI,uBAAOE,UAAU,mBAAmBG,KAAK,WAAWG,QAASX,EAAMY,WAAYL,GAAG,2BACjF,uBAAOF,UAAU,mBAAmBQ,QAAQ,yBAA5C,oCAUjBJ,EAAOK,UAAY,CAACC,MAAOC,IAAUC,QC5BtBC,MAlBf,SAAelB,GAQX,OACI,qBAAKM,MAAO,CAACa,OAAO,QAApB,SACDnB,EAAMoB,OAAU,sBAAKf,UAAS,sBAAiBL,EAAMoB,MAAMZ,KAA7B,gCAAiEa,KAAK,QAApF,UACR,uCATK,SAACC,GACb,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAOlCC,CAAQ5B,EAAMoB,MAAMZ,SADtB,IACuCR,EAAMoB,MAAMS,UCR3D,SAASC,EAAS9B,GAC7B,IA0CA,EAAuB+B,mBAAS,oBAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OAEI,qCAGA,sBAAK5B,UAAU,YAAYC,MAAO,CAACJ,MAAoB,SAAbF,EAAMG,KAAc,QAAQ,WAAtE,UACQ,uDACA,0BAAUE,UAAU,eAAe6B,MAAOF,EAAMG,SAhCrC,SAACC,GACpBC,QAAQC,IAAI,aACZL,EAAQG,EAAMG,OAAOL,QA8B6D5B,MAAO,CAACF,gBAA8B,SAAbJ,EAAMG,KAAc,UAAU,QAASD,MAAoB,SAAbF,EAAMG,KAAc,QAAQ,WAAcI,GAAG,SAAWiC,KAAK,MAAe,uBAC7N,wBAAQnC,UAAU,2BAA0BoC,SAAwB,IAAdT,EAAKU,OAAY/B,QApD7D,WAClB0B,QAAQC,IAAI,uBAAyBN,GACrC,IAAIW,EAAUX,EAAKN,cACnBO,EAAQU,GACR3C,EAAM4C,UAAU,mCAAoC,YAgD5C,8BAEA,wBAAQvC,UAAU,2BAA0BoC,SAAwB,IAAdT,EAAKU,OAAY/B,QAhD7D,WAClB0B,QAAQC,IAAI,wBAA0BN,GACtC,IAAIW,EAAUX,EAAKR,cACnBS,EAAQU,GACR3C,EAAM4C,UAAU,mCAAoC,YA4C5C,+BAEA,wBAAQvC,UAAU,2BAA0BoC,SAAwB,IAAdT,EAAKU,OAAY/B,QA5C7D,WAClB0B,QAAQC,IAAI,oBAAsBN,GAElCC,EADe,IAEfjC,EAAM4C,UAAU,yBAA0B,YAwClC,wBAEA,wBAAQvC,UAAU,2BAA0BoC,SAAwB,IAAdT,EAAKU,OAAY/B,QAhChE,WACf0B,QAAQC,IAAI,aACZ,IAAIN,EAAOa,SAASC,eAAe,UACnCd,EAAKe,SACLC,UAAUC,UAAUC,UAAUlB,EAAKE,OACnCW,SAASM,eAAeC,kBACxBpD,EAAM4C,UAAU,sBAAuB,YA0B/B,uBAEA,wBAAQvC,UAAU,2BAA0BoC,SAAwB,IAAdT,EAAKU,OAAY/B,QAxB/D,WAChB,IAAIgC,EAAUX,EAAKqB,MAAM,QACzBpB,EAAQU,EAAQW,KAAK,MACrBtD,EAAM4C,UAAU,6BAA8B,YAqBtC,mCAMR,sBAAKvC,UAAU,iBAAiBC,MAAO,CAACJ,MAAoB,SAAbF,EAAMG,KAAc,QAAQ,WAA3E,UACI,6BAAI,qDACJ,+CAAkB6B,EAAKqB,MAAM,OAAOE,QAAO,SAACC,GAAW,OAAyB,IAAlBA,EAAQd,UAAcA,OAApF,eAAwGV,EAAKU,OAA7G,iBACA,iDAAoB,KAAQV,EAAKqB,MAAM,KAAKX,OAA5C,sBACA,6BAAI,+CACJ,4BAAIV,EAAKU,OAAO,EAAEV,EAAK,6B,WCFpByB,MA5Df,WACE,MAAwB1B,mBAAS,SAAjC,mBAAO5B,EAAP,KAAauD,EAAb,KACA,EAA0B3B,mBAAS,MAAnC,mBAAOX,EAAP,KAAcuC,EAAd,KAEMf,EAAY,SAACgB,EAAQpD,GACvBmD,EAAS,CACP9B,IAAK+B,EACLpD,KAAMA,IAERqD,YAAW,WACTF,EAAS,QACR,MA0BP,OACC,mCAEH,eAAC,IAAD,WACI,cAAClD,EAAD,CAAQN,KAAMA,EAAMS,WAnBH,WAGL,UAATT,GACDuD,EAAQ,QACRb,SAASiB,KAAKxD,MAAMF,gBAAkB,UACtCwC,EAAU,gCAAiC,aAG3Cc,EAAQ,SACRb,SAASiB,KAAKxD,MAAMF,gBAAkB,QACtCwC,EAAU,iCAAkC,eAS9C,cAAC,EAAD,CAAOxB,MAAOA,IACd,eAAC,IAAD,WACM,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,SAAlB,SACE,cAACjE,EAAD,CAAOI,KAAMA,MAGf,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAlB,SACA,cAAClC,EAAD,CAAUc,UAAWA,EAAYzC,KAAMA,eCpDlC8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.dbc5315f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n    // const [mystyle, setmystyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white',\r\n    //     border: '2 px solid white'        \r\n    // })\r\n    \r\n    // const [btnText, setBtnText] = useState(\"light mode\")\r\n  \r\n    // const toogle = ()=>{\r\n    //     if (mystyle.color === 'black'){\r\n    //         setmystyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: '#212529',\r\n    //             border: '2 px solid black'\r\n    //         })\r\n    //         setBtnText(\"light Mode\")\r\n    //     }\r\n    //     else{\r\n    //          setmystyle ({\r\n    //             color: '#212529',\r\n    //             backgroundColor: 'white',\r\n    //             border: '2 px solid white'\r\n    //         })\r\n    //         setBtnText(\"Dark Mode\")\r\n    //     }\r\n    // }\r\n\r\n    let mystyle = {\r\n      color: props.mode ==='dark'?'white':'#212529',\r\n      backgroundColor: props.mode ==='dark'?'#212529':'white'\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\" style={mystyle}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={mystyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              About us\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n             Text Util is just built for fun and learning react js as a framework.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              style={mystyle}\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n             why Text utils??\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n            first of all, text utils is reaaly free to use and made with react and import PropTypes from 'prop-types'\r\n            wont produce any add's so you may have a better user experience.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              style={mystyle}\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              low use of internet\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n             because of making that by react, it burn your internet in a very tiny ammount.\r\n             and have a nice day\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">TEXT UTILS</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n             \r\n             </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            {/* <div className=\"d-flex\">\r\n\r\n              <div className=\"bg-dark rounded mx-2\"onClick={()=>{props.toggleMode('dark')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-success rounded mx-2\"onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-primary rounded mx-2\"onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\"onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n              <div className=\"bg-light rounded mx-2\"onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px', cursor:'pointer'}}></div>\r\n\r\n            </div> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                 <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">ENABLE MODE</label>\r\n           </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n                         \r\n    )\r\n}\r\n\r\nNavbar.prototype = {title: PropTypes.string}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capital = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n      {props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong> {capital(props.alert.type)}</strong>:{props.alert.msg} \r\n                \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\r\nimport React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextArea(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"UperCase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)   \r\n        props.showalert(\"uppercase converted successfully\", \"success\");  \r\n    }\r\n    const handleloClick = ()=>{\r\n        console.log(\"LowerCase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showalert(\"Lowercase converted successfully\", \"success\");\r\n    }\r\n    const handleClClick = ()=>{\r\n        console.log(\"clear was clicked\" + text);\r\n        let newText = (\"\");\r\n        setText(newText)\r\n        props.showalert(\"Clear did successfully\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"ON CHANGE\");\r\n        setText(event.target.value);\r\n\r\n        \r\n    }\r\n\r\n    const handlecopy = ()=>{\r\n        console.log(\"i am copy\");\r\n        var text = document.getElementById(\"myBox \");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showalert(\"Copied successfully\", \"success\");\r\n    }\r\n\r\n\r\n    const handlespace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showalert(\"Removed space successfully\", \"success\");\r\n    }\r\n\r\n    const [text, setText]= useState(\"Enter Text Here:\"); \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n       \r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#212529'}}>\r\n                <h1 >ENTER YOUR TEXT HERE </h1> \r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#212529':'white', color: props.mode==='dark'?'white':'#212529'}}   id=\"myBox \"   rows=\"8\"></textarea><br />\r\n                <button className=\"btn btn-danger mx-1 my-1\"disabled={text.length===0} onClick={handleUpClick}>Convert Upercase</button>\r\n\r\n                <button className=\"btn btn-danger mx-1 my-1\"disabled={text.length===0} onClick={handleloClick}>Convert Lowercase</button>\r\n\r\n                <button className=\"btn btn-danger mx-1 my-1\"disabled={text.length===0} onClick={handleClClick}>Clear Text</button>\r\n\r\n                <button className=\"btn btn-danger mx-1 my-1\"disabled={text.length===0} onClick={handlecopy}>Copy Text</button>\r\n\r\n                <button className=\"btn btn-danger mx-1 my-1\"disabled={text.length===0} onClick={handlespace}>Remove Extra Space</button>\r\n\r\n\r\n        </div>\r\n\r\n        \r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#212529'}}>\r\n            <h1><b>Your Text Summary.</b></h1>\r\n            <p>Your Text Has {text.split(/\\s+/).filter((element)=>{return element.length !==0}).length} Words and  {text.length} Characters</p>\r\n            <p>Your Text Needs {0.008 * text.split(\" \").length} Minutes To Read</p>\r\n            <h2><b>Text Preview</b></h2>\r\n            <p>{text.length>0?text:\"nothing to preview\"}</p>\r\n            \r\n        </div>\r\n        \r\n\r\n\r\n</>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert'\nimport TextArea from './components/TextArea';\nimport React, { useState } from 'react';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message,type)=>{\n      setalert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1000);\n  }\n  // const removeBodyClass = ()=>{\n  //   document.body.classList.remove('bg-light')\n  //   document.body.classList.remove('bg-dark')\n  //   document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-danger')\n  //   document.body.classList.remove('bg-success')\n  // }\n\n  const toggleMode = ()=>{\n    // removeBodyClass();\n    // document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#212529';\n      showalert(\"  Dark mode has been enabeled\", \"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"  Light mode has been enabeled\", \"success\");\n    }\n  }\n\n  return (\n   <>\n\n<Router>\n    <Navbar mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n         \n          <Route exact path=\"/\">\n          <TextArea showalert={showalert}  mode={mode}/>\n          \n          </Route>\n        </Switch>\n        </Router>\n    {/* <About/> */}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}